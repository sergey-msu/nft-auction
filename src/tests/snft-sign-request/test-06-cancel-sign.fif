// Test #06. Cancel sign request. 


"test-00-header.fif" include


// 'https://pics.com/pdurovsign.png' - sign content
"aHR0cHM6Ly9waWNzLmNvbS9wZHVyb3ZzaWduLnBuZw==" =: content

"EQBPgLTB_RHxxXpwLjCUMzHjsvYjdR3dHFfWs765ZpbvOAmn" dup =: object_address $>smca 0= abort"bad address"
=: object_flags
=: object_addr
=: object_wc

"EQART9XH37phxxDoNGmcKc7t9AS4iR76HPj2Oj0dgSY824RZ" dup =: signee_address $>smca 0= abort"bad address"
=: signee_flags
=: signee_addr
=: signee_wc

"EQA0eAnNwbhm3K0hcJuwdo3ijBcDsSWTkYmxmX1KNtQZzg68" dup =: other_address $>smca 0= abort"bad address"
=: other_flags
=: other_addr
=: other_wc

"EQDK-Qt00761ArsHAK5MevbckLBxyHMmjpUEJ4cHWMKOYsZB" dup =: provider_address $>smca 0= abort"bad address"
=: provider_flags
=: provider_addr
=: provider_wc


// ------------------------ Case 1: Wrong sender ----------------------

<b
   b{100} s, signee_wc 8 i, signee_addr 256 u,     // signee_address
   b{100} s, object_wc 8 i, object_addr 256 u,     // sign_object_address
   b{100} s, provider_wc 8 i, provider_addr 256 u, // sign_provider_address
   1500000000 Gram,  // out_sign_commit_fee
   9000000000 Gram,  // min_stake
   1 16 u,           // network_id
   123456 96 u,      // network_address
   0 1 i,            // approved
   <b  // content
      0x01 8 u, // offchain prefix 
      content base64>B B, // content URI
   b> ref,
   <b b> ref,        // message
b> =: state

<b
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, other_wc 8 i, other_addr 256 u, // sender address
b> =: in_msg_full

<b
   0x6D 32 u,   // op code
   0 64 u,   // query_id
   138896176793470 48 u,  // empty message: ~SIGN~
b> <s =: in_msg_body

my_balance
0
in_msg_full
in_msg_body
recv_internal 
code
state
c7
runvmctx 

=: state
=: exit_code

exit_code 410 "Wrong exit code: 410 expected" ASSERT_EQUAL_INTS

exit_code ."Exit code " exit_code .dump cr 


// ------------------------ Case 2: Already approved ----------------------

<b
   b{100} s, signee_wc 8 i, signee_addr 256 u,     // signee_address
   b{100} s, object_wc 8 i, object_addr 256 u,     // sign_object_address
   b{100} s, provider_wc 8 i, provider_addr 256 u, // sign_provider_address
   1500000000 Gram,  // out_sign_commit_fee
   9000000000 Gram,  // min_stake
   1 16 u,           // network_id
   123456 96 u,      // network_address
   -1 1 i,           // approved
   <b  // content
      0x01 8 u, // offchain prefix 
      content base64>B B, // content URI
   b> ref,
   <b b> ref,        // message
b> =: state

<b
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, object_wc 8 i, object_addr 256 u, // sender address
b> =: in_msg_full

<b
   0x6D 32 u,   // op code
   0 64 u,   // query_id
   138896176793470 48 u,  // empty message: ~SIGN~
b> <s =: in_msg_body

my_balance
0
in_msg_full
in_msg_body
recv_internal 
code
state
c7
runvmctx 

=: state
=: exit_code

exit_code 412 "Wrong exit code: 412 expected" ASSERT_EQUAL_INTS

exit_code ."Exit code " exit_code .dump cr


// ------------------------ Case 3: Success ----------------------

<b
   b{100} s, signee_wc 8 i, signee_addr 256 u,     // signee_address
   b{100} s, object_wc 8 i, object_addr 256 u,     // sign_object_address
   b{100} s, provider_wc 8 i, provider_addr 256 u, // sign_provider_address
   1500000000 Gram,  // out_sign_commit_fee
   9000000000 Gram,  // min_stake
   1 16 u,           // network_id
   123456 96 u,      // network_address
   0 1 i,            // approved
   <b  // content
      0x01 8 u, // offchain prefix 
      content base64>B B, // content URI
   b> ref,
   <b b> ref,        // message
b> =: state

<b
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, object_wc 8 i, object_addr 256 u, // sender address
b> =: in_msg_full

<b
   0x6D 32 u,   // op code
   0 64 u,   // query_id
   138896176793470 48 u,  // empty message: ~SIGN~
b> <s =: in_msg_body

my_balance
0
in_msg_full
in_msg_body
recv_internal 
code
state
c7
runvmctx 

=: state
=: exit_code

exit_code 0 "Wrong exit code: 0 expected" ASSERT_EQUAL_INTS

exit_code ."Exit code " exit_code .dump cr


// parse state
state <s =: stored_slice

// bytes
stored_slice 3 u@+   =: stored_slice =: stored_signee_flags
stored_slice 8 i@+   =: stored_slice =: stored_signee_wc
stored_slice 256 u@+ =: stored_slice =: stored_signee_addr

stored_slice 3 u@+   =: stored_slice =: stored_object_flags
stored_slice 8 i@+   =: stored_slice =: stored_object_wc
stored_slice 256 u@+ =: stored_slice =: stored_object_addr

stored_slice 3 u@+   =: stored_slice =: stored_provider_flags
stored_slice 8 i@+   =: stored_slice =: stored_provider_wc
stored_slice 256 u@+ =: stored_slice =: stored_provider_addr

stored_slice 4 u@+ =: stored_slice =: stored_sign_commit_fee_len
stored_slice stored_sign_commit_fee_len 8 * u@+ =: stored_slice =: stored_sign_commit_fee

stored_slice 4 u@+ =: stored_slice =: stored_min_stake_len
stored_slice stored_min_stake_len 8 * u@+ =: stored_slice =: stored_min_stake

stored_slice 16 u@+ =: stored_slice =: stored_network_id
stored_slice 96 u@+ =: stored_slice =: stored_network_address
stored_slice 1 i@+  =: stored_slice =: stored_approved

stored_slice ref@+ <s  =: stored_content =: stored_slice
stored_content 8 u@+ =: stored_content =: stored_content_onchain

stored_slice ref@+ <s  =: stored_message =: stored_slice
stored_message 0 u@+ =: stored_message =: stored_message_content
stored_message s>
stored_slice s>

// assert contents

<b stored_signee_flags 3 u, stored_signee_wc 8 i, stored_signee_addr 256 u, b> boc>B  // out
<b b{100} s, signee_wc 8 i, signee_addr 256 u, b> boc>B  // expected
"Wrong bytes" ASSERT_EQUAL_BYTES

<b stored_object_flags 3 u, stored_object_wc 8 i, stored_object_addr 256 u, b> boc>B  // out
<b b{100} s, object_wc 8 i, object_addr 256 u, b> boc>B  // expected
"Wrong bytes" ASSERT_EQUAL_BYTES

<b stored_provider_flags 3 u, stored_provider_wc 8 i, stored_provider_addr 256 u, b> boc>B  // out
<b b{100} s, provider_wc 8 i, provider_addr 256 u, b> boc>B  // expected
"Wrong bytes" ASSERT_EQUAL_BYTES

stored_sign_commit_fee 1500000000 "Wrong stored_sign_commit_fee" ASSERT_EQUAL_INTS
stored_min_stake 9000000000 "Wrong stored_min_stake" ASSERT_EQUAL_INTS
stored_network_id 1 "Wrong stored_network_id" ASSERT_EQUAL_INTS
stored_network_address 123456 "Wrong stored_network_address" ASSERT_EQUAL_INTS

stored_approved 0 "Wrong stored_approved" ASSERT_EQUAL_INTS
stored_content_onchain 0x01 "Wrong stored_content_onchain" ASSERT_EQUAL_INTS
stored_message_content 0 "Wrong stored_message_content" ASSERT_EQUAL_INTS

stored_content s>c boc>B        // stored
<b content base64>B B, b> boc>B // expected
"Wrong stored_content" ASSERT_EQUAL_BYTES

// ------------------------ Assert GET method ----------------------

get_sign_request_data
code
state
c7
runvmctx

=: state
=: exit_code
=: out_message_content
=: out_content
=: out_approved
=: out_network_address
=: out_network_id
=: out_min_stake
=: out_sign_commit_fee
=: out_sign_provider_address
=: out_signee_address
=: out_sign_object_address
=: out_init

out_init -1 "Wrong out_init" ASSERT_EQUAL_INTS

out_signee_address s>c boc>B  // out
<b b{100} s, signee_wc 8 i, signee_addr 256 u, b> boc>B  // expected
"Wrong bytes" ASSERT_EQUAL_BYTES

out_sign_object_address s>c boc>B  // out
<b b{100} s, object_wc 8 i, object_addr 256 u, b> boc>B  // expected
"Wrong bytes" ASSERT_EQUAL_BYTES

out_sign_provider_address s>c boc>B  // out
<b b{100} s, provider_wc 8 i, provider_addr 256 u, b> boc>B  // expected
"Wrong bytes" ASSERT_EQUAL_BYTES

out_sign_commit_fee 1500000000 "Wrong out_sign_commit_fee" ASSERT_EQUAL_INTS
out_min_stake 9000000000 "Wrong out_min_stake" ASSERT_EQUAL_INTS

out_network_id 1 "Wrong out_network_id" ASSERT_EQUAL_INTS
out_network_address 123456 "Wrong out_network_address" ASSERT_EQUAL_INTS
out_approved 0 "Wrong out_approved" ASSERT_EQUAL_INTS

out_message_content s>c boc>B  // out
<b b> boc>B  // expected
"Wrong out_message_content" ASSERT_EQUAL_BYTES

out_content boc>B  // out
<b 0x01 8 u, content base64>B B, b> boc>B // expected
"Wrong out_message_content" ASSERT_EQUAL_BYTES
