// Test #03. Init smart contract (deploy + init phases). 

"../utils.fif" include
"../out/nft-auction-code.fif" include <s =: code
"setup-consts.fif" include
"setup-c7.fif" include
"setup-states.fif" include



// -------------------------- CASE #0: Unknown operaction code 

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_wc 8 i, nft_addr 256 u, // sender address
b> =: in_msg_full

<b 
   777 32 u, // op
   0 64 u, // query
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u,
b> <s =: in_msg_body

init_state =: state
"setup-runvmctx.fif" include

exit_code 65535 "Wrong exit code" ASSERT_EQUAL_INTS


// -------------------------- CASE #1: Auction cancellation: wrong sender

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, other_wc 8 i, other_addr 256 u, // sender address
b> =: in_msg_full

<b 
   3 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

init_state =: state
"setup-runvmctx.fif" include

exit_code 458 "Wrong exit code" ASSERT_EQUAL_INTS


// -------------------------- CASE #2: Auction cancellation: insufficient message amount

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b 
   3 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

49999999 =: msg_value
init_state =: state
"setup-runvmctx.fif" include

exit_code 457 "Wrong exit code" ASSERT_EQUAL_INTS


// -------------------------- CASE #3: Auction cancellation: already finished

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b
   3 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

70000000 =: msg_value
finished_state =: state
"setup-runvmctx.fif" include

exit_code 600 "Wrong exit code" ASSERT_EQUAL_INTS


// -------------------------- CASE #4: Auction cancellation success: no bids to return

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b 
   3 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

70000000 =: msg_value
init_state =: state

"setup-runvmctx.fif" include

exit_code 0 "Wrong exit code" ASSERT_EQUAL_INTS
actions ASSERT_ACTIONS

state
"setup-read-state.fif" include

// assert state

-1 =: is_finished
-1 =: is_cancelled
null =: curr_winner_wc
null =: curr_winner_addr
"setup-assert-state.fif" include

// assert get

get_auction_data
code
state
c7 
runvmctx

"setup-assert-get.fif" include


// -------------------------- CASE #5: Auction cancellation success: one bid to return

<b
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b 
   3 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

70000000 =: msg_value
bid_state =: state

"setup-runvmctx.fif" include

exit_code 0 "Wrong exit code" ASSERT_EQUAL_INTS

actions ASSERT_ACTIONS

state
"setup-read-state.fif" include

// assert state

-1 =: is_finished
-1 =: is_cancelled
null =: curr_winner_wc
null =: curr_winner_addr
1100000000 =: curr_winner_bid
"setup-assert-state.fif" include

// assert get

get_auction_data
code
state
c7 
runvmctx

"setup-assert-get.fif" include
