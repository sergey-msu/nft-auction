// Test #04. Finish auction manually. 

"../utils.fif" include
"../out/nft-auction-code.fif" include <s =: code
"setup-consts.fif" include

1570998536 =: now_time
"setup-c7.fif" include
"setup-states.fif" include


// -------------------------- CASE #1: Auction finishing: wrong sender

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, other_wc 8 i, other_addr 256 u, // sender address
b> =: in_msg_full

<b 
   4 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

init_state =: state
"setup-runvmctx.fif" include

exit_code 478 "Wrong exit code" ASSERT_EQUAL_INTS


// -------------------------- CASE #2: Auction finishing: insufficient message amount

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b
   4 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

49999999 =: msg_value
init_state =: state
"setup-runvmctx.fif" include

exit_code 447 "Wrong exit code" ASSERT_EQUAL_INTS


// -------------------------- CASE #3: Auction finishing: already finished

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b
   4 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

70000000 =: msg_value
finished_state =: state
"setup-runvmctx.fif" include

exit_code 600 "Wrong exit code" ASSERT_EQUAL_INTS


// -------------------------- CASE #4: Auction finishing success: no winner (no bids)

<b 
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b 
   4 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

70000000 =: msg_value
init_state =: state

"setup-runvmctx.fif" include

exit_code 0 "Wrong exit code" ASSERT_EQUAL_INTS
actions "No actions" ASSERT_HAS_ACTIONS

state
"setup-read-state.fif" include

// assert state

-1 =: is_finished
null =: curr_winner_wc
null =: curr_winner_addr
"setup-assert-state.fif" include

// assert get

get_general_data
code
state
c7 
runvmctx

"setup-assert-get-general-data.fif" include

get_marketplace_fee_data
code
state
c7 
runvmctx

"setup-assert-get-marketplace-fee-data.fif" include

get_royalty_data
code
state
c7 
runvmctx

"setup-assert-get-royalty-data.fif" include

get_auction_data
code
state
c7 
runvmctx

"setup-assert-get-auction-data.fif" include


// -------------------------- CASE #5: Auction finishing success: has winner

<b
   b{0100} s, // flags: int_msg_info, ihr_disabled, bounce, bounced
   b{100} s, nft_owner_wc 8 i, nft_owner_addr 256 u, // sender address
b> =: in_msg_full

<b
   4 32 u, // op
   0 64 u, // query
b> <s =: in_msg_body

bidder1_bid =: my_balance
bidder1_addr =: nft_owner_addr
70000000 =: msg_value
bid_state =: state

"setup-runvmctx.fif" include

exit_code 0 "Wrong exit code" ASSERT_EQUAL_INTS

actions "No actions" ASSERT_HAS_ACTIONS

state
"setup-read-state.fif" include

// assert state

-1 =: is_finished
bidder1_wc =: curr_winner_wc
bidder1_addr =: curr_winner_addr
bidder1_bid =: curr_winner_bid
"setup-assert-state.fif" include

// assert get

get_general_data
code
state
c7 
runvmctx

"setup-assert-get-general-data.fif" include

get_marketplace_fee_data
code
state
c7 
runvmctx

"setup-assert-get-marketplace-fee-data.fif" include

get_royalty_data
code
state
c7 
runvmctx

"setup-assert-get-royalty-data.fif" include

get_auction_data
code
state
c7 
runvmctx

"setup-assert-get-auction-data.fif" include
